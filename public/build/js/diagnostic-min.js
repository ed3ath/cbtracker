var $result=$("#diag-result");function getContract(t,e){var a=new Web3(nodes[t]);switch(e){case"character":return new a.eth.Contract(Characters,conAddress[t].character);case"weapon":return new a.eth.Contract(Weapons,conAddress[t].weapon);case"shield":return new a.eth.Contract(Shields,conAddress[t].shield);case"pvp":return new a.eth.Contract(PvpArena,conAddress[t].pvp);case"market":return new a.eth.Contract(NFTMarket,conAddress[t].market);default:return null}}function getAddress(t,e){switch(e){case"character":return conAddress[t].character;case"weapon":return conAddress[t].weapon;case"shield":return conAddress[t].shield;default:return null}}async function runDiag(){$("#btn-diag").prop("disabled",!0);var t=$("#diag-chain").val(),e=$("#diag-id").val(),a=$("#diag-type").val();$result.html("");try{if(!t)throw Error("Please select a chain.");if(!e)throw Error("Please enter the nft id.");if(!a)throw Error("Please select the nft type.");$result.html('<span class="text-white">Diagnostic is running....</span>'),$result.html("");await getContract(t,a).methods.ownerOf(e).call();if(1===parseInt(await getContract(t,a).methods.getNftVar(e,1).call()))if("character"===a){if(await getContract(t,"pvp").methods.isCharacterInArena(e).call()){var r=await getContract(t,"pvp").methods.fighterByCharacter(e).call();$result.append(`<span class="text-white"> - ${ucfirst(a)} ${e} is currently busy in arena with weapon ${r[1]}${r[2]?` and shield ${r[2]}`:""}.</span><br>`)}}else $result.append(`<span class="text-white"> - ${ucfirst(a)} ${e} is currently being used in arena.</span><br>`);var s=await getContract(t,"market").methods.getFinalPrice(getAddress(t,a),e).call(),n=parseFloat(fromEther(s)).toFixed(5);if(console.log(getAddress(t,a),s,n),n>0){var c=await getContract(t,"market").methods.getSellerOfNftID(getAddress(t,a),e).call();$result.append(`<span class="text-white"> - ${ucfirst(a)} ${e} currently listed in Bazaar by ${c} for ${n}.</span><br>`)}var l=null,i=null;"character"===a&&(l=parseInt(await getContract(t,a).methods.getStaminaPoints(e).call()),$result.append(`<span class="text-white"> - ${ucfirst(a)} ${e} currently has ${l} stamina.</span><br>`)),"weapon"===a&&(i=parseInt(await getContract(t,a).methods.getDurabilityPoints(e).call()),$result.append(`<span class="text-white"> - ${ucfirst(a)} ${e} currently has ${i} durability.</span><br>`)),$("#btn-diag").removeAttr("disabled")}catch(t){t.message.includes("owner query for nonexistent")?$result.html(`<span class="text-white"> - ${ucfirst(a)} ${e} was burned.</span>`):$result.html(`<span class="text-white">${t.message}</span>`),$("#btn-diag").removeAttr("disabled")}}